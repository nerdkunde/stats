// Generated by CoffeeScript 1.7.1
(function() {
  var animate, buttons, draw_bar, draw_chart, iStuff, labelType, legendChapters, legendTopics, legendTracks, menu_item, nativeCanvasSupport, nativeTextSupport, textSupport, typeOfCanvas, ua, useGradients, _base;

  ua = navigator.userAgent;

  iStuff = ua.match(/iPhone/i) || ua.match(/iPad/i);

  typeOfCanvas = typeof HTMLCanvasElement;

  nativeCanvasSupport = typeOfCanvas === 'object' || typeOfCanvas === 'function';

  textSupport = nativeCanvasSupport && (typeof document.createElement('canvas').getContext('2d').fillText === 'function');

  labelType = typeof (_base = !nativeCanvasSupport || (textSupport && !iStuff)) === "function" ? _base({
    'Native': 'HTML'
  }) : void 0;

  nativeTextSupport = labelType === 'Native';

  useGradients = nativeCanvasSupport;

  animate = !(iStuff || !nativeCanvasSupport);

  buttons = [
    {
      'title': 'Sprecher nach Kapiteln',
      'method': 'track_chapter'
    }, {
      'title': 'Anteile',
      'method': 'track_topic'
    }, {
      'title': 'Wortmeldungen',
      'method': 'track_commitments'
    }
  ];

  legendChapters = function(data) {
    var col, i, table, _i, _ref;
    table = $('<table></table>');
    for (i = _i = 0, _ref = data.length - 2; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      col = $('<tr></tr>');
      col.append($("<td>" + i + "</td>"));
      col.append($("<td>" + data[i].title + "</td>"));
      table.append(col);
    }
    $('#legend').append($("<h3>Chapters</h3>"));
    return $('#legend').append(table);
  };

  legendTracks = function(data, legend) {
    var col, i, table, _i, _ref;
    table = $('<table></table>');
    for (i = _i = 0, _ref = data.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      col = $('<tr></tr>');
      col.append($("<th><div class='query-color' style='background-color:" + legend[data[i].title] + ";'></div></th>"));
      col.append($("<td>" + data[i].title + "</td>"));
      table.append(col);
    }
    return $('#legend').append(table);
  };

  legendTopics = function(data, master) {
    var col, host, table, _i, _len;
    table = $('<table></table>');
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      host = data[_i];
      if (master === host['master']) {
        col = $('<tr></tr>');
        col.append($("<td>" + host['chapter'] + "</td>"));
        table.append(col);
      }
    }
    $('#legend').append($("<h3>" + master + "</h3>"));
    return $('#legend').append(table);
  };

  draw_chart = function(json) {
    var areaChart;
    areaChart = new $jit.AreaChart({
      injectInto: 'infovis',
      animate: true,
      Margin: {
        top: 5,
        left: 5,
        right: 5,
        bottom: 5
      },
      labelOffset: 10,
      showAggregates: true,
      showLabels: true,
      type: 'stacked'
    });
    areaChart.loadJSON(json);
    return areaChart.getLegend();
  };

  draw_bar = function(json, o) {
    var barChart;
    if (o == null) {
      o = 'horizontal';
    }
    barChart = new $jit.BarChart({
      injectInto: 'infovis',
      animate: true,
      orientation: o,
      barsOffset: 0.5,
      Margin: {
        top: 5,
        left: 5,
        right: 5,
        bottom: 5
      },
      labelOffset: 5,
      type: 'stacked',
      showAggregates: false,
      showLabels: true
    });
    barChart.loadJSON(json);
    return barChart.getLegend();
  };

  menu_item = function(title, url) {
    var link, p;
    link = $("<a></a>");
    link.text(title);
    link.attr('id', url);
    link.click(function() {
      var button, file, item, _i, _len, _results;
      $('#infovis').empty();
      $('#legend').empty();
      $('#options').empty();
      file = stats($(this).attr('id'));
      _results = [];
      for (_i = 0, _len = buttons.length; _i < _len; _i++) {
        button = buttons[_i];
        item = $('<button></button>');
        item.text(button['title']);
        item.attr('value', button['method']);
        item.click(function() {
          $('#infovis').empty();
          $('#legend').empty();
          $('#container').css('display', 'block');
          return window[$(this).attr('value')](file);
        });
        _results.push($('#options').append(item));
      }
      return _results;
    });
    p = $('<p></p>');
    p.append(link);
    return $('#menu').append(p);
  };

  window.draw_bar = draw_bar;

  window.draw_chart = draw_chart;

  window.menu_item = menu_item;

  window.legendTopics = legendTopics;

  window.legendChapters = legendChapters;

  window.legendTracks = legendTracks;

  $(document).ready(function() {
    return menu();
  });

}).call(this);
